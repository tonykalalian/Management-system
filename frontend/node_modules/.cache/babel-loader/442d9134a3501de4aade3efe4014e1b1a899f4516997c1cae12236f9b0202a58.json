{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AMOEBA\\\\Desktop\\\\Testing sync\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport SuperAdminDashboard from \"./components/SuperAdminDashboard\";\nimport AdminDashboard from \"./components/AdminDashboard\";\nimport NewsEntryDashboard from \"./components/NewsEntryDashboard\";\nimport ManageUsers from \"./components/ManageUsers\";\nimport Sidebar from \"./components/Sidebar\";\nimport NotFoundPage from \"./components/NotFoundPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  component: Component,\n  userRole,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    render: props => {\n      if (!userRole) {\n        // User is not logged in, redirect to login page\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 18\n        }, this);\n      } else if (rest.allowedRoles && !rest.allowedRoles.includes(userRole)) {\n        // User does not have the correct role for this route, show unauthorized page\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"You don't have access to this page.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 18\n        }, this);\n      } else {\n        // User is logged in and has the correct role, render the component\n        return /*#__PURE__*/_jsxDEV(Component, {\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 18\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_c = ProtectedRoute;\nconst Layout = ({\n  userRole,\n  handleLogout,\n  children\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      userRole: userRole,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true);\n};\n_c2 = Layout;\nconst App = () => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userRole, setUserRole] = useState(\"\");\n\n  // Check if the user is already logged in (e.g., after a page refresh)\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    const role = localStorage.getItem(\"userRole\");\n    if (token && role) {\n      setIsLoggedIn(true);\n      setUserRole(role);\n    }\n  }, []);\n  const handleLogin = role => {\n    setIsLoggedIn(true);\n    setUserRole(role);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"userRole\");\n    setIsLoggedIn(false);\n    setUserRole(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        render: () => /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 45\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(Layout, {\n        userRole: userRole,\n        handleLogout: handleLogout,\n        children: [/*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/dashboard/superadmin\",\n          component: SuperAdminDashboard,\n          userRole: userRole,\n          allowedRoles: [\"SuperAdmin\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/dashboard/admin\",\n          component: AdminDashboard,\n          userRole: userRole,\n          allowedRoles: [\"Admin\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/dashboard/newsentry\",\n          component: NewsEntryDashboard,\n          userRole: userRole,\n          allowedRoles: [\"NewsEntry\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ProtectedRoute, {\n          exact: true,\n          path: \"/dashboard/manageusers\",\n          component: ManageUsers,\n          userRole: userRole,\n          allowedRoles: [\"SuperAdmin\", \"Admin\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"*\",\n        component: NotFoundPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+zn/wX4UwxO9PKjPXqlj38fJw64=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"ProtectedRoute\");\n$RefreshReg$(_c2, \"Layout\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Switch","Redirect","Login","SuperAdminDashboard","AdminDashboard","NewsEntryDashboard","ManageUsers","Sidebar","NotFoundPage","jsxDEV","_jsxDEV","Fragment","_Fragment","ProtectedRoute","component","Component","userRole","rest","render","props","to","fileName","_jsxFileName","lineNumber","columnNumber","allowedRoles","includes","children","_c","Layout","handleLogout","_c2","App","_s","isLoggedIn","setIsLoggedIn","setUserRole","token","localStorage","getItem","role","handleLogin","removeItem","exact","path","onLogin","_c3","$RefreshReg$"],"sources":["C:/Users/AMOEBA/Desktop/Testing sync/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport SuperAdminDashboard from \"./components/SuperAdminDashboard\";\r\nimport AdminDashboard from \"./components/AdminDashboard\";\r\nimport NewsEntryDashboard from \"./components/NewsEntryDashboard\";\r\nimport ManageUsers from \"./components/ManageUsers\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport NotFoundPage from \"./components/NotFoundPage\";\r\n\r\nconst ProtectedRoute = ({ component: Component, userRole, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!userRole) {\r\n          // User is not logged in, redirect to login page\r\n          return <Redirect to=\"/\" />;\r\n        } else if (rest.allowedRoles && !rest.allowedRoles.includes(userRole)) {\r\n          // User does not have the correct role for this route, show unauthorized page\r\n          return <div>You don't have access to this page.</div>;\r\n        } else {\r\n          // User is logged in and has the correct role, render the component\r\n          return <Component {...props} />;\r\n        }\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nconst Layout = ({ userRole, handleLogout, children }) => {\r\n  return (\r\n    <>\r\n      <Sidebar userRole={userRole} handleLogout={handleLogout} />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [userRole, setUserRole] = useState(\"\");\r\n\r\n  // Check if the user is already logged in (e.g., after a page refresh)\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    const role = localStorage.getItem(\"userRole\");\r\n    if (token && role) {\r\n      setIsLoggedIn(true);\r\n      setUserRole(role);\r\n    }\r\n  }, []);\r\n\r\n  const handleLogin = (role) => {\r\n    setIsLoggedIn(true);\r\n    setUserRole(role);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"userRole\");\r\n    setIsLoggedIn(false);\r\n    setUserRole(\"\");\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" render={() => <Login onLogin={handleLogin} />} />\r\n        {isLoggedIn && (\r\n          <Layout userRole={userRole} handleLogout={handleLogout}>\r\n            <ProtectedRoute\r\n              exact\r\n              path=\"/dashboard/superadmin\"\r\n              component={SuperAdminDashboard}\r\n              userRole={userRole}\r\n              allowedRoles={[\"SuperAdmin\"]}\r\n            />\r\n            <ProtectedRoute\r\n              exact\r\n              path=\"/dashboard/admin\"\r\n              component={AdminDashboard}\r\n              userRole={userRole}\r\n              allowedRoles={[\"Admin\"]}\r\n            />\r\n            <ProtectedRoute\r\n              exact\r\n              path=\"/dashboard/newsentry\"\r\n              component={NewsEntryDashboard}\r\n              userRole={userRole}\r\n              allowedRoles={[\"NewsEntry\"]}\r\n            />\r\n            <ProtectedRoute\r\n              exact\r\n              path=\"/dashboard/manageusers\"\r\n              component={ManageUsers}\r\n              userRole={userRole}\r\n              allowedRoles={[\"SuperAdmin\", \"Admin\"]}\r\n            />\r\n          </Layout>\r\n        )}\r\n        <Route path=\"*\" component={NotFoundPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}